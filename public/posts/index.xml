<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Alexander Deplov – Senior Product Designer Blog</title>
    <link>https://alexdeplov.github.io/posts/</link>
    <description>Recent content in Posts on Alexander Deplov – Senior Product Designer Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Jul 2024 13:24:09 +0200</lastBuildDate>
    <atom:link href="https://alexdeplov.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Product Page Optimization Anchor Pointer App</title>
      <link>https://alexdeplov.github.io/posts/blog/2024/asc-product-page-optimization-anchor-pointer-app/</link>
      <pubDate>Sun, 14 Jul 2024 13:24:09 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2024/asc-product-page-optimization-anchor-pointer-app/</guid>
      <description>Inspired by this post I decided to try this approach with my Anchor Pointer app. The idea is to create a hook with the first screenshot and then highlight features with others, including &amp;ldquo;zoom&amp;rdquo; effect per each screen.&#xA;The test ran for 14 days and ended with +7.92% improvement and 40.3% confidence.&#xA;Current Product Page: Treatment A (the winner): </description>
    </item>
    <item>
      <title>Navigating Success: 11 Years of Innovation with Anchor Pointer GPS Compass</title>
      <link>https://alexdeplov.github.io/posts/portfolio/navigating_success_11_years_of_innovation_with_anchor_pointer_gps_compass/</link>
      <pubDate>Thu, 04 Jul 2024 21:52:14 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/portfolio/navigating_success_11_years_of_innovation_with_anchor_pointer_gps_compass/</guid>
      <description>As a product designer with a passion for innovation, I embarked on a journey to create my own product. This led to the birth of the Anchor Pointer GPS Compass, an iOS app designed to provide reliable navigation without an internet connection.&#xA;Total downloads 732K, latest 5 years:&#xA;Project goal In 2013 I decided to release my first iOS app. On this way I asked my brother-developer to help me with this project.</description>
    </item>
    <item>
      <title>How to Shake Up Zero Downloads on App Store</title>
      <link>https://alexdeplov.github.io/posts/blog/2024/how-to-shake-up-zero-downloads-on-app-store/</link>
      <pubDate>Sun, 30 Jun 2024 14:54:59 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2024/how-to-shake-up-zero-downloads-on-app-store/</guid>
      <description>The Problem You have a paid iOS app that you want to publish to the App Store, or it&amp;rsquo;s already published, but sales are dropping to zero.&#xA;Today in the App Store have about 4 million and 1 million of games according to statista. With such huge competition each new app will be hidden to a user, and according to PhoneArena:&#xA;400,000 apps in the App Store have never been downloaded says report - PhoneArena</description>
    </item>
    <item>
      <title>Making Mobile Game for Toddlers</title>
      <link>https://alexdeplov.github.io/posts/portfolio/making-mobile-game-for-toddlers/</link>
      <pubDate>Wed, 26 Jun 2024 12:08:12 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/portfolio/making-mobile-game-for-toddlers/</guid>
      <description>Project goal As a side project I wanted to create a game that could be used to entertain toddlers. I wanted to learn how to code using a simple and fun project. By the way, this is my first project with SpriteKit as a developer, so I wanted to keep the mechanics as simple as possible.&#xA;Researching target audiences Despite the fact that the game is designed for children under 4 years of age, it was necessary to take into account the adult audience of parents.</description>
    </item>
    <item>
      <title>Waterlogue Pro macOS App Icon Creation</title>
      <link>https://alexdeplov.github.io/posts/portfolio/waterlogue-pro-macos-app-icon-creation/</link>
      <pubDate>Mon, 24 Jun 2024 17:31:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/portfolio/waterlogue-pro-macos-app-icon-creation/</guid>
      <description>Project goal A friend and client of mine — Tinrocket — asked me to create a new Mac app icon for the new Waterlogue Pro app. Back in the day, an iOS version of the icon was used for macOS, but John (the founder of Tinrocket) set the goal to make it more mature and more &amp;ldquo;pro&amp;rdquo;.&#xA;How As the lead designer on this project, I started with hand-drawn sketches to get a feel for a new icon.</description>
    </item>
    <item>
      <title>Personal Computer Crisis</title>
      <link>https://alexdeplov.github.io/posts/blog/2024/personal-computer-crisis/</link>
      <pubDate>Sat, 22 Jun 2024 16:30:18 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2024/personal-computer-crisis/</guid>
      <description>First computer in our family was bought when I was about 11-13 years old. It was a 486 IBM PC. During that first period I learned a lot about DOS, Win 3.1, OS/2 Warp, all kind of Linuxes and FreeBSD, and so on.&#xA;Different operating systems were installed, along with games and all kinds of software just out of curiosity.&#xA;By playing with a computer, I was able to learn many different things about how it works, how hardware works, how software works, how to write a code or create a digital image, and many-many different things that we can call computer science.</description>
    </item>
    <item>
      <title>Dark UI Depth – The Hidden Hierarchy</title>
      <link>https://alexdeplov.github.io/posts/blog/2024/ui-depth-and-color-the-hidden-hierarchy/</link>
      <pubDate>Thu, 20 Jun 2024 20:38:00 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2024/ui-depth-and-color-the-hidden-hierarchy/</guid>
      <description>Introduction When working with dark UI and custom colors, you need to think about how the content will appear on the screen, not only from top to bottom, but also from far to near.&#xA;Every button, every view you have has a different sense of distance to the viewer.&#xA;Darker, or objects that appear in a shadow or semi-transparent usually feels far away from the viewer. White and contrasted with the background feels closer to the viewer.</description>
    </item>
    <item>
      <title>Why the Fear of AI Taking on Humans s a Nonsense</title>
      <link>https://alexdeplov.github.io/posts/blog/2024/why-the-fear-of-ai-taking-on-humans-is-a-nonsense/</link>
      <pubDate>Sat, 23 Mar 2024 20:05:56 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2024/why-the-fear-of-ai-taking-on-humans-is-a-nonsense/</guid>
      <description>Lately you may hear a lot of talk about AI going wild and deciding to destroy humans and how dangerous that can be. This is such nonsense, and here is why.&#xA;First of all, AI must raise a question about humans. Only then should it make a decision to do something with it. From what we currently have, our AI systems have never asked a question. With a current state of technology it just runs a piece of code we ask to be loaded into a computer memory, chunk by chunk, and performs an output according to it.</description>
    </item>
    <item>
      <title>How to Boost Mobile App Usage With a Simple Analytics Analysis</title>
      <link>https://alexdeplov.github.io/posts/blog/2023/how-to-boost-mobile-app-usage-with-a-simple-analytics-analysis/</link>
      <pubDate>Thu, 21 Sep 2023 20:41:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2023/how-to-boost-mobile-app-usage-with-a-simple-analytics-analysis/</guid>
      <description>Introduction If you are working on an app interface, you need to know very well how people are using your app.&#xA;In order to improve usage, you need to find an answer to what exactly is popular amount of users and what isn’t.&#xA;Sometimes app analytics can be very tricky, depending on the complexity of your app, your level of expertise in data analysis and the variety of techniques that require skills to work well.</description>
    </item>
    <item>
      <title>How to Use Strings Method to Improve Any App UI Design</title>
      <link>https://alexdeplov.github.io/posts/blog/2023/how-to-use-strings-method-to-improve-any-ui-design/</link>
      <pubDate>Tue, 15 Aug 2023 20:41:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2023/how-to-use-strings-method-to-improve-any-ui-design/</guid>
      <description>Introduction Sometimes, when you’re building a UI or trying to analyse competitors’ apps, you notice that something is wrong with the UI, but you can’t say for sure what it is. It just looks wrong, or not well aligned, or noisy.&#xA;If you need to make the UI look clean and professional, you can use Strings Method to clean it up quickly.&#xA;Let’s take a look at this screen first, it’s clearly noisy and not well aligned:</description>
    </item>
    <item>
      <title>How Text Affects the Meaning of UI Icons</title>
      <link>https://alexdeplov.github.io/posts/blog/2023/how-text-affects-the-meaning-of-ui-icons/</link>
      <pubDate>Sun, 13 Aug 2023 20:41:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2023/how-text-affects-the-meaning-of-ui-icons/</guid>
      <description>Introduction When you create icons for the user interface of an app, you should remember that the icon should be easy to read. The user should grasp the meaning of an icon in a few milliseconds and understand the meaning correctly. Otherwise, it will lead to confusion.&#xA;A good designer should remember that the meaning of the same icon can be changed by its label.&#xA;By reading the label, the user creates a meaning that affects what we see when we look at the icon.</description>
    </item>
    <item>
      <title>What Works Better Than a Three-Click Rule?</title>
      <link>https://alexdeplov.github.io/posts/blog/2023/what-works-better-than-three-click-rule/</link>
      <pubDate>Fri, 11 Aug 2023 20:41:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2023/what-works-better-than-three-click-rule/</guid>
      <description>Introduction One of my favorite product design podcasts is the Quick Coffee. They discussed what makes great product design in the episode “5 principles of product design”. One of the principles was the “3 click rule”. The idea is simple: Keep a goal closer to the user, so they don’t have to do more than three clicks.&#xA;After research on that topic I found alternative ideas to that.&#xA;Normal Nielsen on three clicks rule: Click count varies with task complexity, no fixed number.</description>
    </item>
    <item>
      <title>Why Layout Evolution Matters in UI Design</title>
      <link>https://alexdeplov.github.io/posts/blog/2023/why-layout-evolution-matters-in-ui-design/</link>
      <pubDate>Wed, 08 Feb 2023 20:41:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/2023/why-layout-evolution-matters-in-ui-design/</guid>
      <description>Introduction While researching old operating systems I decided to try an experiment and re-created old UIs with modern components. Here we have File Viewer from NeXTSTEP operating system (left screenshot).&#xA;Old layout by modern UI components Here we can quickly notice few problems with old layout :&#xA;It’s unclear what first row do. I still can’t say for sure, seems like a favorites&#xA;Second row uses for navigation, but selection of the Preview.</description>
    </item>
    <item>
      <title>iOS App Pricing Doesn&#39;t Have to Be Low</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/ios-app-pricing-doesn-t-have-to-be-low/</link>
      <pubDate>Wed, 30 Jun 2021 18:46:57 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/ios-app-pricing-doesn-t-have-to-be-low/</guid>
      <description>For many years, I developed only a few paid iOS apps. I read many online articles suggesting to set the price low, like $0.99 per copy. They said it allows more people to afford it.&#xA;After some tests, I tried less than 0.99 (Tiers A, B), 0.99, 1.99, 2.99, up to 11.99. The result was that one of my top apps made more money in total when the price was 3.</description>
    </item>
    <item>
      <title>Recreate the Apple Watch&#39;s Iconic Pairing Pattern in Vector</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/cracking-the-code-recreate-the-apple-watch_s-iconic-pairing-pattern/</link>
      <pubDate>Mon, 22 Mar 2021 10:27:48 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/cracking-the-code-recreate-the-apple-watch_s-iconic-pairing-pattern/</guid>
      <description>Apple Watch itself is so beautiful, but also its pairing screen. I feel that this pattern is too complicated to be made by hand, so it seems that it was made by using code. It turns out that Apple made it based on 24 ovals, each representing 24 hours in a day. Each oval is offset from the center. So we can easily recreate it in code.&#xA;I&amp;rsquo;m using PaperJS - a vector graphics scripting framework - because you can export any final shape or pattern to an SVG file.</description>
    </item>
    <item>
      <title>The Day Apple Reset the App Store</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/the-day-apple-reset-the-app-store/</link>
      <pubDate>Thu, 14 Jan 2021 20:41:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/the-day-apple-reset-the-app-store/</guid>
      <description>Introduction As an indie iOS developer, you’re facing stiff competition on the App Store market. Each year, thousands of apps are added by developers from all around the globe. Each of us wants to dominate that market to capture all the money and attention of users. With more apps on the App Store, there are fewer opportunities for each developer. More effort is needed to gather an audience, improve your ASO for visibility, or pay more for advertising.</description>
    </item>
    <item>
      <title>How to Convert RGB to HUE Value in Swift</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-convert-rgb-to-hue-value-in-swift/</link>
      <pubDate>Thu, 22 Jun 2017 10:46:05 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-convert-rgb-to-hue-value-in-swift/</guid>
      <description>Sometimes it’s handy to use HUE properties in apps or games to animate its saturation or brightness or even the color itself. So here is super simple func to convert RGB to HUE.&#xA;let r: CGFloat = 251/255 let g: CGFloat = 94/255 let b: CGFloat = 50/255 func rgbToHue(r: CGFloat, g: CGFloat, b: CGFloat) -&amp;gt; (h: CGFloat, s: CGFloat, b: CGFloat) { let minV: CGFloat = CGFloat(min(r, g, b)) let maxV: CGFloat = CGFloat(max(r, g, b)) let delta: CGFloat = maxV - minV var hue: CGFloat = 0 if delta !</description>
    </item>
    <item>
      <title>How to Create Delegate in Swift</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-create-delegate-in-swift/</link>
      <pubDate>Tue, 30 May 2017 10:42:43 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-create-delegate-in-swift/</guid>
      <description>In class that send the data create protocol: protocol BackButtonActionDelegate { func pressFinished(){} } Inside this class: class BackButton: SKNode { var delegate: BackButtonActionDelegate? } Inside the class send the data, run the delegate message when needed: delegate?.pressFinished() Inside another class, that received data, add delegate:&#xA;class OptionsWindow: SKNode, BackButtonActionDelegate { } Add same function from sender:&#xA;func pressFinished() { print(&amp;#34;delegate triggered&amp;#34;) } Inside another class, that received data, in viewDidLoad() add:</description>
    </item>
    <item>
      <title>Taskmoji: Simplified To-Do App for People Who Hate To-Do Apps</title>
      <link>https://alexdeplov.github.io/posts/portfolio/taskmoji-simplified-to-do-app-for-people-who-hate-to-do-apps/</link>
      <pubDate>Wed, 07 Sep 2016 10:53:16 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/portfolio/taskmoji-simplified-to-do-app-for-people-who-hate-to-do-apps/</guid>
      <description>You probably know that apps can sometimes be harder to use than physical objects. They&amp;rsquo;re slow, confusing, and require a lot of taps, clicks, and selections.&#xA;That&amp;rsquo;s why, for many people, pen and paper still works better than some fancy app on your iPhone.&#xA;Core of the problem I started digging into the idea of &amp;ldquo;how can it be so simple, so literally replace pen &amp;amp; paper&amp;rdquo; and found that there are two main problems with apps:</description>
    </item>
    <item>
      <title>The Future of Icons is No Shapes?</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/the-future-of-icons-is-no-shapes/</link>
      <pubDate>Sat, 16 Jul 2016 20:41:08 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/the-future-of-icons-is-no-shapes/</guid>
      <description>Introduction If you’re a designer or developer you probably working with icons a lot. They’re everywhere. The main goal for every icon designer — is to make its shapes so clear, so it can be understandable without labels, without words. Even in foreign cultures.&#xA;Few years ago there is one popular topic in designers circles “why we should not use floppy disk icons anymore”, remember? The idea is simple, modern computers has changed, we don’t have floppy disk so modern user can’t associate the idea of save something with a floppy disk shape.</description>
    </item>
    <item>
      <title>New App Release Newspaper for iPad</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/new-app-release-newspaper-for-ipad/</link>
      <pubDate>Tue, 12 Apr 2016 09:51:03 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/new-app-release-newspaper-for-ipad/</guid>
      <description>The Old Newspaper app released on App Store.&#xA;Story behind the app I just finished a side project I always wanted to do: turn the iPad into a newspaper. From the first moment I saw the iPad, I saw it as a book replacement. The surface we can fill with dynamic information, but unlike the iPhone, it has the same format as books. Or, yes, a newspaper.&#xA;I started this project a year ago, in 2015.</description>
    </item>
    <item>
      <title>How to Deselect Selected UITableView Cell</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-deselect-selected-uitable-view-cell/</link>
      <pubDate>Wed, 06 Apr 2016 12:22:56 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-deselect-selected-uitable-view-cell/</guid>
      <description>You have UITableView with customized cells style, selection color, etc. When you tap on the cell, slide to another VC and came back, your cell still selected. Really annoing. Here is how to fix that.&#xA;override func viewWillAppear(_ animated: Bool) { super.viewWillAppear(animated) if let selectedIndexPath = tableView.indexPathForSelectedRow { tableView.deselectRow(at: selectedIndexPath, animated: true) } } </description>
    </item>
    <item>
      <title>How to Change UIlabel Line Height in Swift</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-change-uilabel-line-height-swift/</link>
      <pubDate>Wed, 30 Mar 2016 16:53:11 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-change-uilabel-line-height-swift/</guid>
      <description>@IBOutlet weak var myLabel: UILabel! let textForLabel = &amp;#34;&amp;#34;&amp;#34; Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&amp;#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. &amp;#34;&amp;#34;&amp;#34; let paragraphStyle = NSMutableParagraphStyle() // Line height size paragraphStyle.</description>
    </item>
    <item>
      <title>How to Dismiss Modal View Form Sheet Controller in Swift</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-dismiss-modal-view-form-sheet-controller-in-swift/</link>
      <pubDate>Wed, 25 Nov 2015 17:01:15 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-dismiss-modal-view-form-sheet-controller-in-swift/</guid>
      <description>When storyboard segue presentation mode set to Form Sheet you can add simple code to hide its ViewController tap on background. You don&amp;rsquo;t need Done button. Of course this trick is for iPad app only, because on iPhone Form Sheet will cover all screen size.&#xA;This code works well in Swift, iOS 9:&#xA;class ViewController: UIViewController, UIGestureRecognizerDelegate { var tapBGGesture: UITapGestureRecognizer! override func viewDidAppear(animated: Bool) { tapBGGesture = UITapGestureRecognizer(target: self, action: &amp;#34;settingsBGTapped:&amp;#34;) tapBGGesture.</description>
    </item>
    <item>
      <title>How to use PDF’s as icons source in Xcode</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-use-pdfs-as-icons-source-in-xcode/</link>
      <pubDate>Fri, 30 Oct 2015 09:47:22 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-use-pdfs-as-icons-source-in-xcode/</guid>
      <description>I just tried some tests about PDF as graphic source for iOS apps and want to share results with you.&#xA;I want to use vectors in the world full of different screen resolutions because it will reduce design and development time. The modification time also decreased. In the old iOS development days we have to support @1x, @2x, @3x graphics, which required some additional manual work, but thanks Xcode PDF support we can use 1 vector file instead 3 PNG.</description>
    </item>
    <item>
      <title>How to Make Custom UINavigationController Back Button Image Without Title (Swift)</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-make-custom-uinavigationcontroller-back-button-image-without-title-swift/</link>
      <pubDate>Tue, 21 Jul 2015 09:39:55 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-make-custom-uinavigationcontroller-back-button-image-without-title-swift/</guid>
      <description>The easiest way to customize navigation controller back button.&#xA;By default back button looks like this:&#xA;We are going to make it looks like Instagram back button (without text):&#xA;I quickly redraw the button in the Sketch and add into Assets:&#xA;Storyboard looks like this:&#xA;In the ViewController.swift write: override func viewDidLoad() { super.viewDidLoad() if let backButtonImage = UIImage(named: &amp;#34;backButton&amp;#34;) { navigationController?.navigationBar.backIndicatorImage = backButtonImage navigationController?.navigationBar.backIndicatorTransitionMaskImage = backButtonImage } navigationItem.backBarButtonItem = UIBarButtonItem(title: &amp;#34;&amp;#34;, style: .</description>
    </item>
    <item>
      <title>How to Disable Uinavigationbar Shadow in Ios 9 Swift</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-disable-uinavigationbar-shadow-in-ios-9-swift/</link>
      <pubDate>Tue, 21 Jul 2015 09:31:28 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-disable-uinavigationbar-shadow-in-ios-9-swift/</guid>
      <description>Easiest way to remove UINavigationBar bottom 1px border.&#xA;This trick can be applied to iOS 8 and iOS 7. The UINavigationBar bottom border is an 1px shadow. According to the documentation to remove it you have to provide UIImage. But we’re going to create an empty UIImage.&#xA;In viewDidAppear: override func viewDidAppear(_ animated: Bool) { super.viewDidAppear(animated) let img = UIImage() navigationController?.navigationBar.shadowImage = img navigationController?.navigationBar.setBackgroundImage(img, for: .default) } Result: If you want to change background color to the navigationBar, do this:</description>
    </item>
    <item>
      <title>How to Set Padding for UITextField in Swift, the Easiest Way</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-set-padding-for-uitextfield-in-swift-the-easiest-way/</link>
      <pubDate>Mon, 16 Feb 2015 09:11:49 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-set-padding-for-uitextfield-in-swift-the-easiest-way/</guid>
      <description>Of course, you also need to add a top and a bottom paddings, but this can be achieved through autolayout height size of the textfield. Result: left padding for UITextField placeholder and text:&#xA;import UIKit class ViewController: UIViewController { @IBOutlet weak var myTextField: UITextField! override func viewDidLoad() { super.viewDidLoad() let paddingView = UIView(frame: CGRect(x: 0, y: 0, width: 15, height: myTextField.frame.height)) myTextField.leftView = paddingView myTextField.leftViewMode = .always } } We used this technique in our new Taskler app, but without big indent.</description>
    </item>
    <item>
      <title>How to Duplicate Geometry from .DAE Files in SceneKit (Swift)</title>
      <link>https://alexdeplov.github.io/posts/blog/archive/how-to-duplicate-geometry-from-dae-files-in-scenekit-swift/</link>
      <pubDate>Sun, 11 Jan 2015 08:56:17 +0200</pubDate>
      <guid>https://alexdeplov.github.io/posts/blog/archive/how-to-duplicate-geometry-from-dae-files-in-scenekit-swift/</guid>
      <description>The important part of this code is that every duplicated object has it&amp;rsquo;s own color. Different from the color of the source object.&#xA;// Import .dae source let scene = SCNScene(named: &amp;#34;art.scnassets/chess.dae&amp;#34;)! // Find layer with &amp;#34;queen&amp;#34; name of the figure let queenNode = scene.rootNode.childNodeWithName(&amp;#34;queen&amp;#34;, recursively: true) queenNode?.scale = SCNVector3Make(100, 100, 100) // Set up scene view let sceneView = SCNView() sceneView.frame = self.view.frame sceneView.scene = scene sceneView.autoenablesDefaultLighting = true sceneView.</description>
    </item>
  </channel>
</rss>
