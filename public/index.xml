<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexander Deplov – Senior Product Designer Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Alexander Deplov – Senior Product Designer Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Feb 2025 21:53:39 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How I Automated My Computer Routine With macOS Folder Actions</title>
      <link>http://localhost:1313/posts/blog/2025/how-i-automated-my-computer-life-with-macos-folder-actions/</link>
      <pubDate>Wed, 12 Feb 2025 21:53:39 +0100</pubDate>
      <guid>http://localhost:1313/posts/blog/2025/how-i-automated-my-computer-life-with-macos-folder-actions/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve always believed that computers should handle repetitive tasks better than humans. It frustrates me when something can&amp;rsquo;t be automated the way I want or when simple actions require more effort than they should.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s say we want to convert a video from one format to another. This often happens to me when I need to share a screencast video with colleagues on Slack. By default, macOS records in .MOV format, which is too large to share. Sometimes, I also have another file that I want to shrink for easier sharing in a message.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Can cheap MiniPC with FreeBSD 14 outperform MacBook Pro M1 Pro?</title>
      <link>http://localhost:1313/posts/blog/2025/can-cheap-minipc-with-freebsd-14-outperform-macbook-pro-m1-pro/</link>
      <pubDate>Wed, 05 Feb 2025 22:25:51 +0100</pubDate>
      <guid>http://localhost:1313/posts/blog/2025/can-cheap-minipc-with-freebsd-14-outperform-macbook-pro-m1-pro/</guid>
      <description>&lt;h3 id=&#34;tldr&#34;&gt;TL;DR&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;I put my €1800 MacBook Pro M1 Pro head-to-head with a €300 mini PC and found the cheaper option surprisingly fast. While the mini PC couldn&amp;rsquo;t completely replace my Mac for work due to some software and hardware limitations, it made me question the need for expensive purchases. Do we really need the latest and greatest hardware to be productive? Or are we being pushed to constantly upgrade for features we might not even fully utilize?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why I Ditched My Apple Watch for a Quartz Watch—and Never Looked Back</title>
      <link>http://localhost:1313/posts/blog/2024/why-i-ditched-my-apple-watch-for-a-quartz-watch/</link>
      <pubDate>Wed, 20 Nov 2024 21:37:37 +0100</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/why-i-ditched-my-apple-watch-for-a-quartz-watch/</guid>
      <description>&lt;p&gt;I have always been a HUGE Apple Watch fan. I used this device day and night, but at some point, after couple of years usage, I realized that I don&amp;rsquo;t like it anymore. The biggest issue was that the battery drained too fast, so I had to charge it three times a day. I should add that I was wearing it at night to see the time if I woke up in the middle of the night.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Opera Browser Onboarding UX Analysis</title>
      <link>http://localhost:1313/posts/blog/2024/opera-browser-onboarding-ux-analysis/</link>
      <pubDate>Fri, 01 Nov 2024 16:28:45 +0100</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/opera-browser-onboarding-ux-analysis/</guid>
      <description>&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQlk_bUStpNmEc5hiQs7nGSU7qHR1J5z4bi4TDNpvF4pSI5bCRIlzCHPKMvLY21Cg/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;100%&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34; style=&#34;width: 100%; aspect-ratio: 16/10&#34; autofocus&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;Inspired by the &lt;a href=&#34;https://growth.design/course&#34;&gt;Product Psychology Masterclass&lt;/a&gt;, I did an analysis of the Opera browser onboarding to find the peaks and valleys in the journey.&lt;/p&gt;&#xA;&lt;p&gt;Each step will increase or decrease the psych level marked with 🟢 for up or 🔻 for down.&lt;/p&gt;&#xA;&lt;p&gt;The Opera website has a nice claim about browser features. Faster, safer and smarter than standard browsers. I was excited to try something new, so my psych level was high 🟢:&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Best Way to Create iOS Screenshots Titles</title>
      <link>http://localhost:1313/posts/blog/2024/the-best-way-to-create-ios-screenshots-titles/</link>
      <pubDate>Fri, 25 Oct 2024 11:08:10 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/the-best-way-to-create-ios-screenshots-titles/</guid>
      <description>&lt;p&gt;Inspired by that tweet, instead of saying &amp;ldquo;Here&amp;rsquo;s what our product can do&amp;rdquo; you can shift to &amp;ldquo;Here&amp;rsquo;s what you can do with our product&amp;rdquo;. This approach led me to rethink all the screenshots I&amp;rsquo;ve created in the past to make them more effective.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I realized I made another mistake by not considering that users often lack context. Here is a bad example:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In the first screenshot, we see the large &amp;ldquo;SAVE&amp;rdquo; title.&lt;/li&gt;&#xA;&lt;li&gt;As a new user unfamiliar with the app, this title alone doesn&amp;rsquo;t tell me why I would want to SAVE or what I&amp;rsquo;m saving?&lt;/li&gt;&#xA;&lt;li&gt;There&amp;rsquo;s some supporting text that reads &amp;ldquo;save… location by map or address,&amp;rdquo; which is better, but it still describes app functionality. According to the tweet, we should focus on what the user can achieve. &amp;ldquo;Yeah, I can save location by map or address, but why I want to do that?&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;improved-version&#34;&gt;Improved Version&lt;/h3&gt;&#xA;&lt;p&gt;An improved version of the title could be:&#xA;&amp;ldquo;Never get lost again with GPS navigation&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>My iOS App Icons Design</title>
      <link>http://localhost:1313/posts/portfolio/ios-app-icons-design/</link>
      <pubDate>Wed, 23 Oct 2024 21:44:06 +0200</pubDate>
      <guid>http://localhost:1313/posts/portfolio/ios-app-icons-design/</guid>
      <description>&lt;p&gt;Through my career I have created some iOS app icons. The biggest challenge is to express app idea through simple graphics that can be readable without additioonal explanation. At the same time, the icon should be unique, so researching the competition is always necessary.&lt;/p&gt;&#xA;&lt;p&gt;Some of the icons were A/B tested to find the best performing versions.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/1.webp&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;./images/2.webp&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;./images/3.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>With iOS 18 Your App Needs Dark App Icon More Than Ever</title>
      <link>http://localhost:1313/posts/blog/2024/with_ios18_your_app_needs_dark_app_icon_more_than_ever/</link>
      <pubDate>Tue, 24 Sep 2024 17:02:50 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/with_ios18_your_app_needs_dark_app_icon_more_than_ever/</guid>
      <description>&lt;p&gt;With the latest release of iOS 18, Apple continues to emphasize design harmony throughout the operating system with Dark Mode for app icons. It provides a sleek and modern aesthetic that many users have come to love. Unfortunately, if your app doesn&amp;rsquo;t conform to this visual paradigm, users are more likely &lt;strong&gt;to remove it from the Home Screen&lt;/strong&gt; to get rid of an app icon that doesn&amp;rsquo;t fit.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;When an iOS 18 user enables Dark Mode on their device, the operating system automatically switches to a dark theme for all apps. However, not every app has been updated to reflect this change. As a result, your beautifully designed app will appear out of place among the other dark-themed icons on the home screen.&lt;/p&gt;</description>
    </item>
    <item>
      <title>UI Elements: Understanding Their Purpose for Effective Design</title>
      <link>http://localhost:1313/posts/blog/2024/ui-elements-understanding-their-purpose-for-effective-design/</link>
      <pubDate>Tue, 10 Sep 2024 14:08:34 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/ui-elements-understanding-their-purpose-for-effective-design/</guid>
      <description>&lt;p&gt;Once I was reading a tutorial about color and the article was about &amp;ldquo;there are a bunch of color schemes, like monochromatic, analogous, complementary, etc.&amp;rdquo;, with all the description how to create each one. But at the end they wrote &amp;ldquo;Use them!&amp;rdquo; This confuses me. How is the reader supposed to learn how to use them? In my opinion, we need to understand the underlying purpose of each tool we can use, as well as an outcome. If we agreed that color is a tool.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Two Data-Driven Methods to Identify Your Target Audience Age</title>
      <link>http://localhost:1313/posts/blog/2024/two-data-driven-methods-to-identify-your-target-audience-age-as-a-product-designer/</link>
      <pubDate>Mon, 29 Jul 2024 13:13:53 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/two-data-driven-methods-to-identify-your-target-audience-age-as-a-product-designer/</guid>
      <description>&lt;p&gt;Knowing your target audience is critical to creating a product that truly resonates with your users. By understanding their age (as an example), you can tailor the user experience, features, and even your marketing messages to their specific needs and preferences. This personalization not only increases engagement, but also contributes to the overall success of your product.&lt;/p&gt;&#xA;&lt;p&gt;As a product designer, if you can&amp;rsquo;t define your users, it&amp;rsquo;s like trying to shoot a target blindfolded. You need to know their ages, preferences, and behaviors in order to design a product that fits them like a glove.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Navigating Success: 11 Years of Innovation with Anchor Pointer GPS Compass</title>
      <link>http://localhost:1313/posts/portfolio/navigating_success_11_years_of_innovation_with_anchor_pointer_gps_compass/</link>
      <pubDate>Thu, 04 Jul 2024 21:52:14 +0200</pubDate>
      <guid>http://localhost:1313/posts/portfolio/navigating_success_11_years_of_innovation_with_anchor_pointer_gps_compass/</guid>
      <description>&lt;p&gt;As a product designer with a passion for innovation, I embarked on a journey to create my own product. This led to the birth of the &lt;a href=&#34;https://apps.apple.com/us/app/find-car-anchor-pointer/id791684332&#34;&gt;Anchor Pointer GPS Compass&lt;/a&gt;, an iOS app designed to provide reliable navigation without an internet connection.&lt;/p&gt;&#xA;&lt;p&gt;Total downloads 732K, latest 5 years:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;project-goal&#34;&gt;Project goal&lt;/h3&gt;&#xA;&lt;p&gt;In 2013 I decided to release my first iOS app. On this way I asked my brother-developer to help me with this project. The goal was to try to create a unique navigation app using GPS as a core technology with one big advantage, it can work without internet connection by reading GPS signal directly from satellites. It could be handy for people who are traveling and not willing to buy another SIM card just to have an internet connection. Or people who use iPhone in a natural area, far away from cell towers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Shake Up Zero Downloads on App Store</title>
      <link>http://localhost:1313/posts/blog/2024/how-to-shake-up-zero-downloads-on-app-store/</link>
      <pubDate>Sun, 30 Jun 2024 14:54:59 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/how-to-shake-up-zero-downloads-on-app-store/</guid>
      <description>&lt;h3 id=&#34;the-problem&#34;&gt;The Problem&lt;/h3&gt;&#xA;&lt;p&gt;You have a paid iOS app that you want to publish to the App Store, or it&amp;rsquo;s already published, but sales are dropping to zero.&lt;/p&gt;&#xA;&lt;p&gt;Today in the App Store have about 4 million and 1 million of games according to statista. With such huge competition each new app will be hidden to a user, and according to PhoneArena:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;400,000 apps in the App Store have never been downloaded says report - PhoneArena&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making Mobile Game for Toddlers</title>
      <link>http://localhost:1313/posts/portfolio/making-mobile-game-for-toddlers/</link>
      <pubDate>Wed, 26 Jun 2024 12:08:12 +0200</pubDate>
      <guid>http://localhost:1313/posts/portfolio/making-mobile-game-for-toddlers/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;Hero&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;project-goal&#34;&gt;Project goal&lt;/h3&gt;&#xA;&lt;p&gt;As a side project I wanted to create a game that could be used to entertain toddlers. I wanted to learn how to code using a simple and fun project. By the way, this is my first project with SpriteKit as a developer, so I wanted to keep the mechanics as simple as possible.&lt;/p&gt;&#xA;&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/RV8-Pp8Iv2Q?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;h3 id=&#34;researching-target-audiences&#34;&gt;Researching target audiences&lt;/h3&gt;&#xA;&lt;p&gt;Despite the fact that the game is designed for children under 4 years of age, it was necessary to take into account the &lt;strong&gt;adult audience&lt;/strong&gt; of parents. After all, parents decide what their children play. Parents give their children their smartphones when they need some time to themselves (sometimes it happens). Therefore, the game should be simple enough for a child to play without asking a parent for help.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Waterlogue Pro macOS App Icon Creation</title>
      <link>http://localhost:1313/posts/portfolio/waterlogue-pro-macos-app-icon-creation/</link>
      <pubDate>Mon, 24 Jun 2024 17:31:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/portfolio/waterlogue-pro-macos-app-icon-creation/</guid>
      <description>&lt;h3 id=&#34;project-goal&#34;&gt;Project goal&lt;/h3&gt;&#xA;&lt;p&gt;A friend and client of mine — &lt;a href=&#34;https://www.tinrocket.com&#34;&gt;Tinrocket&lt;/a&gt; — asked me to create a new Mac app icon for the new Waterlogue Pro app. Back in the day, an iOS version of the icon was used for macOS, but John (the founder of Tinrocket) set the goal to make it more mature and more &amp;ldquo;pro&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;iOS version of the icon&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;how&#34;&gt;How&lt;/h3&gt;&#xA;&lt;p&gt;As the lead designer on this project, I started with hand-drawn sketches to get a feel for a new icon.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Personal Computer Crisis</title>
      <link>http://localhost:1313/posts/blog/2024/personal-computer-crisis/</link>
      <pubDate>Sat, 22 Jun 2024 16:30:18 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/personal-computer-crisis/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;WarGames movie&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;First computer in our family was bought when I was about 11-13 years old. It was a 486 IBM PC. During that first period I learned a lot about DOS, Win 3.1, OS/2 Warp, all kind of Linuxes and FreeBSD, and so on.&lt;/p&gt;&#xA;&lt;p&gt;Different operating systems were installed, along with games and all kinds of software just out of curiosity.&lt;/p&gt;&#xA;&lt;p&gt;By playing with a computer, I was able to learn many different things about how it works, how hardware works, how software works, how to write a code or create a digital image, and many-many different things that we can call computer science. Or &amp;ldquo;hacking&amp;rdquo; in the old sense of the word.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dark UI Depth – The Hidden Hierarchy</title>
      <link>http://localhost:1313/posts/blog/2024/ui-depth-and-color-the-hidden-hierarchy/</link>
      <pubDate>Thu, 20 Jun 2024 20:38:00 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/ui-depth-and-color-the-hidden-hierarchy/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;When working with dark UI and custom colors, you need to think about how the content will appear on the screen, not only from top to bottom, but also from far to near.&lt;/p&gt;&#xA;&lt;p&gt;Every button, every view you have has a different sense of distance to the viewer.&lt;/p&gt;&#xA;&lt;p&gt;Darker, or objects that appear in a shadow or semi-transparent usually feels far away from the viewer. White and contrasted with the background feels closer to the viewer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why the Fear of AI Taking on Humans s a Nonsense</title>
      <link>http://localhost:1313/posts/blog/2024/why-the-fear-of-ai-taking-on-humans-is-a-nonsense/</link>
      <pubDate>Sat, 23 Mar 2024 20:05:56 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2024/why-the-fear-of-ai-taking-on-humans-is-a-nonsense/</guid>
      <description>&lt;p&gt;Lately you may hear a lot of talk about AI going wild and deciding to destroy humans and how dangerous that can be. This is such nonsense, and here is why.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First of all, AI must &lt;strong&gt;raise a question&lt;/strong&gt; about humans. Only then should it make a &lt;strong&gt;decision&lt;/strong&gt; to do something with it.&lt;/li&gt;&#xA;&lt;li&gt;From what we currently have, our AI systems have never asked a question. With a current state of technology it just runs a piece of code we ask to be loaded into a computer memory, chunk by chunk, and performs an output according to it.&lt;/li&gt;&#xA;&lt;li&gt;Second, we know animals that can &amp;ldquo;talk&amp;rdquo;. Like parrots or Koko the gorilla. She can interact with humans. But even these animals have never asked a question. They answer/react to our questions only when asked, like in the case of a Koko or when you ask your dog to go outside and it gets excited.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Every time I hear that AI can harm a human, I wonder if AI is already capable of:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Boost Mobile App Usage With a Simple Analytics Analysis</title>
      <link>http://localhost:1313/posts/blog/2023/how-to-boost-mobile-app-usage-with-a-simple-analytics-analysis/</link>
      <pubDate>Thu, 21 Sep 2023 20:41:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2023/how-to-boost-mobile-app-usage-with-a-simple-analytics-analysis/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;If you are working on an app interface, you need to know very well how people are using your app.&lt;/p&gt;&#xA;&lt;p&gt;In order to improve usage, you need to find an answer to what exactly is popular amount of users and what isn’t.&lt;/p&gt;&#xA;&lt;p&gt;Sometimes app analytics can be very tricky, depending on the complexity of your app, your level of expertise in data analysis and the variety of techniques that require skills to work well. So after a while you might feel that you don’t use analytics very often.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Use Strings Method to Improve Any App UI Design</title>
      <link>http://localhost:1313/posts/blog/2023/how-to-use-strings-method-to-improve-any-ui-design/</link>
      <pubDate>Tue, 15 Aug 2023 20:41:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2023/how-to-use-strings-method-to-improve-any-ui-design/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Sometimes, when you’re building a UI or trying to analyse competitors’ apps, you notice that something is wrong with the UI, but you can’t say for sure what it is. It just looks wrong, or not well aligned, or noisy.&lt;/p&gt;&#xA;&lt;p&gt;If you need to make the UI look clean and professional, you can use Strings Method to clean it up quickly.&lt;/p&gt;&#xA;&lt;p&gt;Let’s take a look at this screen first, it’s clearly noisy and not well aligned:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How Text Affects the Meaning of UI Icons</title>
      <link>http://localhost:1313/posts/blog/2023/how-text-affects-the-meaning-of-ui-icons/</link>
      <pubDate>Sun, 13 Aug 2023 20:41:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2023/how-text-affects-the-meaning-of-ui-icons/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;When you create icons for the user interface of an app, you should remember that the icon should be easy to read. The user should grasp the meaning of an icon in a few milliseconds and understand the meaning correctly. Otherwise, it will lead to confusion.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;A good designer should remember that the meaning of the same icon can be changed by its label.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;By reading the label, the user creates a meaning that affects what we see when we look at the icon.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What Works Better Than a Three-Click Rule?</title>
      <link>http://localhost:1313/posts/blog/2023/what-works-better-than-three-click-rule/</link>
      <pubDate>Fri, 11 Aug 2023 20:41:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2023/what-works-better-than-three-click-rule/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/0.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;One of my favorite product design podcasts is the Quick Coffee. They discussed what makes great product design in the episode “5 principles of product design”. One of the principles was the “3 click rule”. The idea is simple: Keep a goal closer to the user, so they don’t have to do more than three clicks.&lt;/p&gt;&#xA;&lt;p&gt;After research on that topic I found alternative ideas to that.&lt;/p&gt;&#xA;&lt;h3 id=&#34;normal-nielsen-on-three-clicks-rule&#34;&gt;Normal Nielsen on three clicks rule:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Click count varies with task complexity, no fixed number.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why Layout Evolution Matters in UI Design</title>
      <link>http://localhost:1313/posts/blog/2023/why-layout-evolution-matters-in-ui-design/</link>
      <pubDate>Wed, 08 Feb 2023 20:41:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/2023/why-layout-evolution-matters-in-ui-design/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;While researching old operating systems I decided to try an experiment and re-created old UIs with modern components. Here we have File Viewer from NeXTSTEP operating system (left screenshot).&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1-1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;old-layout-by-modern-ui-components&#34;&gt;Old layout by modern UI components&lt;/h3&gt;&#xA;&lt;p&gt;Here we can quickly notice few problems with old layout :&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;It’s unclear what first row do. I still can’t say for sure, seems like a favorites&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Second row uses for navigation, but selection of the Preview.app is duplicating selection inside of the folder&lt;/p&gt;</description>
    </item>
    <item>
      <title>iOS App Pricing Doesn&#39;t Have to Be Low</title>
      <link>http://localhost:1313/posts/blog/archive/ios-app-pricing-doesn-t-have-to-be-low/</link>
      <pubDate>Wed, 30 Jun 2021 18:46:57 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/ios-app-pricing-doesn-t-have-to-be-low/</guid>
      <description>&lt;p&gt;For many years, I developed only a few paid iOS apps. I read many online articles suggesting to set the price low, like $0.99 per copy. They said it allows more people to afford it.&lt;/p&gt;&#xA;&lt;p&gt;After some tests, I tried less than 0.99 (Tiers A, B), 0.99, 1.99, 2.99, up to 11.99.&#xA;The result was that one of my top apps made more money &lt;strong&gt;in total&lt;/strong&gt; when the price was 3.99. I tested this idea many times and over and over again - 3.99 was the winner.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recreate the Apple Watch&#39;s Iconic Pairing Pattern in Vector</title>
      <link>http://localhost:1313/posts/blog/archive/cracking-the-code-recreate-the-apple-watch_s-iconic-pairing-pattern/</link>
      <pubDate>Mon, 22 Mar 2021 10:27:48 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/cracking-the-code-recreate-the-apple-watch_s-iconic-pairing-pattern/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Apple Watch itself is so beautiful, but also its pairing screen. I feel that this pattern is too complicated to be made by hand, so it seems that it was made by using code. It turns out that Apple made it based on 24 ovals, each representing 24 hours in a day. Each oval is offset from the center. So we can easily recreate it in code.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;m using PaperJS - a vector graphics scripting framework - because you can export any final shape or pattern to an SVG file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Day Apple Reset the App Store</title>
      <link>http://localhost:1313/posts/blog/archive/the-day-apple-reset-the-app-store/</link>
      <pubDate>Thu, 14 Jan 2021 20:41:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/the-day-apple-reset-the-app-store/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/1.webp&#34; alt=&#34;The day Apple reset the App Store&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;As an indie iOS developer, you’re facing stiff competition on the App Store market. Each year, thousands of apps are added by developers from all around the globe. Each of us wants to dominate that market to capture all the money and attention of users. With more apps on the App Store, there are fewer opportunities for each developer. More effort is needed to gather an audience, improve your ASO for visibility, or pay more for advertising.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Convert RGB to HUE Value in Swift</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-convert-rgb-to-hue-value-in-swift/</link>
      <pubDate>Thu, 22 Jun 2017 10:46:05 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-convert-rgb-to-hue-value-in-swift/</guid>
      <description>&lt;p&gt;Sometimes it’s handy to use HUE properties in apps or games to animate its saturation or brightness or even the color itself. So here is super simple func to convert RGB to HUE.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;let r: CGFloat = 251/255&#xA;let g: CGFloat = 94/255&#xA;let b: CGFloat = 50/255&#xA;&#xA;func rgbToHue(r: CGFloat, g: CGFloat, b: CGFloat) -&amp;gt; (h: CGFloat, s: CGFloat, b: CGFloat) {&#xA;    let minV: CGFloat = CGFloat(min(r, g, b))&#xA;    let maxV: CGFloat = CGFloat(max(r, g, b))&#xA;    let delta: CGFloat = maxV - minV&#xA;    &#xA;    var hue: CGFloat = 0&#xA;    if delta != 0 {&#xA;        if r == maxV {&#xA;            hue = (g - b) / delta&#xA;        } else if g == maxV {&#xA;            hue = 2 + (b - r) / delta&#xA;        } else {&#xA;            hue = 4 + (r - g) / delta&#xA;        }&#xA;        &#xA;        hue *= 60&#xA;        if hue &amp;lt; 0 {&#xA;            hue += 360&#xA;        }&#xA;    }&#xA;    &#xA;    let saturation = maxV == 0 ? 0 : (delta / maxV)&#xA;    let brightness = maxV&#xA;    &#xA;    return (h: hue/360, s: saturation, b: brightness)&#xA;}&#xA;&#xA;let hueColor = rgbToHue(r: r, g: g, b: b)&#xA;let finalColor = SKColor(hue: hueColor.h, saturation: hueColor.s, brightness: hueColor.b, alpha: 1)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;images/1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Create Delegate in Swift</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-create-delegate-in-swift/</link>
      <pubDate>Tue, 30 May 2017 10:42:43 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-create-delegate-in-swift/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;In class that send the data create protocol:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;protocol BackButtonActionDelegate {&#xA;    func pressFinished(){}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Inside this class:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class BackButton: SKNode {&#xA;    var delegate: BackButtonActionDelegate?&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Inside the class send the data, run the delegate message when needed:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;delegate?.pressFinished()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Inside another class, that received data, add delegate:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class OptionsWindow: SKNode, BackButtonActionDelegate {&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add same function from sender:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;func pressFinished() {&#xA;    print(&amp;#34;delegate triggered&amp;#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Inside another class, that received data, in viewDidLoad() add:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;backButton.delegate = self&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Done.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Taskmoji: Simplified To-Do App for People Who Hate To-Do Apps</title>
      <link>http://localhost:1313/posts/portfolio/taskmoji-simplified-to-do-app-for-people-who-hate-to-do-apps/</link>
      <pubDate>Wed, 07 Sep 2016 10:53:16 +0200</pubDate>
      <guid>http://localhost:1313/posts/portfolio/taskmoji-simplified-to-do-app-for-people-who-hate-to-do-apps/</guid>
      <description>&lt;p&gt;You probably know that apps can sometimes be harder to use than physical objects. They&amp;rsquo;re slow, confusing, and require a lot of taps, clicks, and selections.&lt;/p&gt;&#xA;&lt;p&gt;That&amp;rsquo;s why, for many people, pen and paper still works better than some fancy app on your iPhone.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;core-of-the-problem&#34;&gt;Core of the problem&lt;/h3&gt;&#xA;&lt;p&gt;I started digging into the idea of &amp;ldquo;how can it be so simple, so literally replace pen &amp;amp; paper&amp;rdquo; and found that there are two main problems with apps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Future of Icons is No Shapes?</title>
      <link>http://localhost:1313/posts/blog/archive/the-future-of-icons-is-no-shapes/</link>
      <pubDate>Sat, 16 Jul 2016 20:41:08 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/the-future-of-icons-is-no-shapes/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;If you’re a designer or developer you probably working with icons a lot. They’re everywhere. The main goal for every icon designer — is to make its shapes so clear, so it can be understandable without labels, without words. Even in foreign cultures.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Few years ago there is one popular topic in designers circles “why we should not use floppy disk icons anymore”, remember? The idea is simple, modern computers has changed, we don’t have floppy disk so modern user can’t associate the idea of save something with a floppy disk shape.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New App Release Newspaper for iPad</title>
      <link>http://localhost:1313/posts/blog/archive/new-app-release-newspaper-for-ipad/</link>
      <pubDate>Tue, 12 Apr 2016 09:51:03 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/new-app-release-newspaper-for-ipad/</guid>
      <description>&lt;p&gt;The Old Newspaper app &lt;a href=&#34;https://itunes.apple.com/us/app/old-newspaper-breaking-news/id1068207248?mt=8&#34;&gt;released on App Store&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;story-behind-the-app&#34;&gt;Story behind the app&lt;/h3&gt;&#xA;&lt;p&gt;I just finished a side project I always wanted to do: turn the iPad into a newspaper. From the first moment I saw the iPad, I saw it as a book replacement. The surface we can fill with dynamic information, but unlike the iPhone, it has the same format as books. Or, yes, a newspaper.&lt;/p&gt;&#xA;&lt;p&gt;I started this project a year ago, in 2015. It was even before Apple introduced Apple News. And that changed my app ideology a little bit. Instead of making an app for everyone, I decide to separate readers by their location.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Deselect Selected UITableView Cell</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-deselect-selected-uitable-view-cell/</link>
      <pubDate>Wed, 06 Apr 2016 12:22:56 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-deselect-selected-uitable-view-cell/</guid>
      <description>&lt;p&gt;You have UITableView with customized cells style, selection color, etc. When you tap on the cell, slide to another VC and came back, your cell still selected. Really annoing. Here is how to fix that.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;override func viewWillAppear(_ animated: Bool) {&#xA;    super.viewWillAppear(animated)&#xA;&#xA;    if let selectedIndexPath = tableView.indexPathForSelectedRow {&#xA;        tableView.deselectRow(at: selectedIndexPath, animated: true)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Change UIlabel Line Height in Swift</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-change-uilabel-line-height-swift/</link>
      <pubDate>Wed, 30 Mar 2016 16:53:11 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-change-uilabel-line-height-swift/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@IBOutlet weak var myLabel: UILabel!&#xA;&#xA;let textForLabel = &amp;#34;&amp;#34;&amp;#34;&#xA;Lorem Ipsum is simply dummy text of the printing and typesetting industry.  Lorem Ipsum has been the industry&amp;#39;s standard dummy text ever since the 1500s,  when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into &#xA;electronic typesetting, remaining essentially unchanged.&#xA;&amp;#34;&amp;#34;&amp;#34;&#xA;&#xA;let paragraphStyle = NSMutableParagraphStyle()&#xA;// Line height size&#xA;paragraphStyle.lineSpacing = 1.4&#xA;&#xA;let attrString = NSMutableAttributedString(string: textForLabel)&#xA;attrString.addAttribute(.paragraphStyle, &#xA;                        value: paragraphStyle, &#xA;                        range: NSRange(location: 0, length: attrString.length))&#xA;&#xA;myLabel.attributedText = attrString&#xA;myLabel.textAlignment = .center&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;result&#34;&gt;Result:&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Dismiss Modal View Form Sheet Controller in Swift</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-dismiss-modal-view-form-sheet-controller-in-swift/</link>
      <pubDate>Wed, 25 Nov 2015 17:01:15 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-dismiss-modal-view-form-sheet-controller-in-swift/</guid>
      <description>&lt;p&gt;When storyboard segue presentation mode set to Form Sheet you can add simple code to hide its ViewController tap on background. You don&amp;rsquo;t need Done button. Of course this trick is for iPad app only, because on iPhone Form Sheet will cover all screen size.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This code works well in Swift, iOS 9:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class ViewController: UIViewController, UIGestureRecognizerDelegate {&#xA;    var tapBGGesture: UITapGestureRecognizer!&#xA;    &#xA;    override func viewDidAppear(animated: Bool) {&#xA;        tapBGGesture = UITapGestureRecognizer(target: self, action: &amp;#34;settingsBGTapped:&amp;#34;)&#xA;        tapBGGesture.delegate = self&#xA;        tapBGGesture.numberOfTapsRequired = 1&#xA;        tapBGGesture.cancelsTouchesInView = false&#xA;        self.view.window!.addGestureRecognizer(tapBGGesture)&#xA;    }&#xA;    &#xA;    func settingsBGTapped(sender: UITapGestureRecognizer) {&#xA;        if sender.state == UIGestureRecognizerState.Ended {&#xA;            guard let presentedView = presentedViewController?.view else {&#xA;                return&#xA;            }&#xA;            &#xA;            if !CGRectContainsPoint(presentedView.bounds, sender.locationInView(presentedView)) {&#xA;                self.dismissViewControllerAnimated(true, completion: { () -&amp;gt; Void in&#xA;                })&#xA;            }&#xA;        }&#xA;    }&#xA;    &#xA;    func gestureRecognizer(gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWithGestureRecognizer otherGestureRecognizer: UIGestureRecognizer) -&amp;gt; Bool {&#xA;        return true&#xA;    }&#xA;    &#xA;    override func viewWillDisappear(animated: Bool) {&#xA;        self.view.window!.removeGestureRecognizer(tapBGGesture)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>How to Use PDF’s as Icons Source in Xcode</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-use-pdfs-as-icons-source-in-xcode/</link>
      <pubDate>Fri, 30 Oct 2015 09:47:22 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-use-pdfs-as-icons-source-in-xcode/</guid>
      <description>&lt;p&gt;I just tried some tests about PDF as graphic source for iOS apps and want to share results with you.&lt;/p&gt;&#xA;&lt;p&gt;I want to use vectors in the world full of different screen resolutions because it will reduce design and development time. The modification time also decreased. In the old iOS development days we have to support @1x, @2x, @3x graphics, which required some additional manual work, but thanks Xcode PDF support we can use 1 vector file instead 3 PNG. Now the question: how to make it right.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Make Custom UINavigationController Back Button Image Without Title (Swift)</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-make-custom-uinavigationcontroller-back-button-image-without-title-swift/</link>
      <pubDate>Tue, 21 Jul 2015 09:39:55 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-make-custom-uinavigationcontroller-back-button-image-without-title-swift/</guid>
      <description>&lt;p&gt;The easiest way to customize navigation controller back button.&lt;/p&gt;&#xA;&lt;p&gt;By default back button looks like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;We are going to make it looks like Instagram back button (without text):&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I quickly redraw the button in the Sketch and add into Assets:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Storyboard looks like this:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/4.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;in-the-viewcontrollerswift-write&#34;&gt;In the ViewController.swift write:&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;override func viewDidLoad() {&#xA;    super.viewDidLoad()&#xA;&#xA;    if let backButtonImage = UIImage(named: &amp;#34;backButton&amp;#34;) {  &#xA;        navigationController?.navigationBar.backIndicatorImage = backButtonImage&#xA;        navigationController?.navigationBar.backIndicatorTransitionMaskImage = backButtonImage&#xA;    }&#xA;&#xA;    navigationItem.backBarButtonItem = UIBarButtonItem(title: &amp;#34;&amp;#34;, style: .plain, target: nil, action: nil)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;images/5.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Disable UINavigationBar Shadow in iOS 9 Swift</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-disable-uinavigationbar-shadow-in-ios-9-swift/</link>
      <pubDate>Tue, 21 Jul 2015 09:31:28 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-disable-uinavigationbar-shadow-in-ios-9-swift/</guid>
      <description>&lt;p&gt;&lt;em&gt;Easiest way to remove UINavigationBar bottom 1px border.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;This trick can be applied to iOS 8 and iOS 7. The UINavigationBar bottom border is an 1px shadow. According to the &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/UIKit/Reference/UINavigationBar_Class/#//apple_ref/occ/instp/UINavigationBar/shadowImage&#34;&gt;documentation&lt;/a&gt; to remove it you have to provide UIImage. But we’re going to create an empty UIImage.&lt;/p&gt;&#xA;&lt;h3 id=&#34;in-viewdidappear&#34;&gt;In viewDidAppear:&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;override func viewDidAppear(_ animated: Bool) {&#xA;    super.viewDidAppear(animated) &#xA;&#xA;    let img = UIImage()&#xA;    navigationController?.navigationBar.shadowImage = img&#xA;    navigationController?.navigationBar.setBackgroundImage(img, for: .default)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;result&#34;&gt;Result:&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you want to change background color to the navigationBar, do this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Set Padding for UITextField in Swift, the Easiest Way</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-set-padding-for-uitextfield-in-swift-the-easiest-way/</link>
      <pubDate>Mon, 16 Feb 2015 09:11:49 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-set-padding-for-uitextfield-in-swift-the-easiest-way/</guid>
      <description>&lt;p&gt;Of course, you also need to add a top and a bottom paddings, but this can be achieved through autolayout height size of the textfield. Result: left padding for UITextField placeholder and text:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import UIKit&#xA;&#xA;class ViewController: UIViewController {&#xA;&#xA;    @IBOutlet weak var myTextField: UITextField!&#xA;&#xA;    override func viewDidLoad() {&#xA;        super.viewDidLoad()&#xA;&#xA;        let paddingView = UIView(frame: CGRect(x: 0, y: 0, width: 15, height: myTextField.frame.height))&#xA;        myTextField.leftView = paddingView&#xA;        myTextField.leftViewMode = .always &#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;images/2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Duplicate Geometry from .DAE Files in SceneKit (Swift)</title>
      <link>http://localhost:1313/posts/blog/archive/how-to-duplicate-geometry-from-dae-files-in-scenekit-swift/</link>
      <pubDate>Sun, 11 Jan 2015 08:56:17 +0200</pubDate>
      <guid>http://localhost:1313/posts/blog/archive/how-to-duplicate-geometry-from-dae-files-in-scenekit-swift/</guid>
      <description>&lt;p&gt;The important part of this code is that every duplicated object has it&amp;rsquo;s own color. Different from the color of the source object.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// Import .dae source&#xA;let scene = SCNScene(named: &amp;#34;art.scnassets/chess.dae&amp;#34;)!&#xA;&#xA;// Find layer with &amp;#34;queen&amp;#34; name of the figure&#xA;let queenNode = scene.rootNode.childNodeWithName(&amp;#34;queen&amp;#34;, recursively: true)&#xA;queenNode?.scale = SCNVector3Make(100, 100, 100)&#xA;&#xA;// Set up scene view&#xA;let sceneView = SCNView()&#xA;sceneView.frame = self.view.frame&#xA;sceneView.scene = scene&#xA;sceneView.autoenablesDefaultLighting = true&#xA;sceneView.allowsCameraControl = true&#xA;sceneView.backgroundColor = UIColor(red: 237/255, green: 229/255, blue: 211/255, alpha: 1)&#xA;self.view = sceneView&#xA;&#xA;// Set up camera&#xA;let cameraNode = SCNNode()&#xA;cameraNode.camera = SCNCamera()&#xA;scene.rootNode.addChildNode(cameraNode)&#xA;cameraNode.position = SCNVector3(x: -30, y: 0, z: 100)&#xA;cameraNode.camera?.automaticallyAdjustsZRange = true&#xA;&#xA;// Create simple for loop&#xA;for i in 1...5 {&#xA;    let box2 = queenNode?.clone() as! SCNNode&#xA;    let box2Geometry = box2.geometry?.copy() as! SCNGeometry&#xA;    let box2GeometryNode = SCNNode(geometry: box2Geometry)&#xA;    box2GeometryNode.scale = SCNVector3Make(100, 100, 100)&#xA;    box2GeometryNode.position = SCNVector3(x: -20 * Float(i), y: 0, z: 0)&#xA;    &#xA;    let newMaterial2 = SCNMaterial()&#xA;    newMaterial2.diffuse.contents = UIColor.yellow&#xA;    box2GeometryNode.geometry?.firstMaterial = newMaterial2&#xA;    &#xA;    if i == 2 {&#xA;        newMaterial2.diffuse.contents = UIColor.red&#xA;    } else if i &amp;lt; 2 {&#xA;        newMaterial2.diffuse.contents = UIColor.purple&#xA;        box2GeometryNode.rotation = SCNVector4Make(0, 1, 0, 1.5)&#xA;    } else if i &amp;gt; 3 {&#xA;        newMaterial2.diffuse.contents = UIColor.brown&#xA;    } else if i == 4 {&#xA;        newMaterial2.diffuse.contents = UIColor.blue&#xA;    }&#xA;    &#xA;    scene.rootNode.addChildNode(box2GeometryNode)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;result&#34;&gt;Result&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
